package com.custom.ui {	import flash.display.Loader;	import flash.display.MovieClip;	import flash.events.*;	import flash.net.URLRequest;	public class SwfObj extends MovieClip {				private var swfLoader:Loader;		private var swfObj:MovieClip;		private var swfID:String;		private var swfX:Number;		private var swfY:Number;		private var widthOffset:Number;		private var heightOffset:Number;		private var currentLabelEnd:String;				private var label:TextObj;				public function SwfObj(_assetURL:String, _swfID:String='', _swfX:Number=0, _swfY:Number=0):void {			swfLoader = new Loader();			swfLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, displaySwf);			swfID = _swfID; 			swfX = _swfX;			swfY = _swfY;			swfLoader.load(new URLRequest(_assetURL));		}				public function get id():String {			return swfID;		}				public function set id(temp:String):void {			swfID = temp;		}				public function get content():MovieClip {			return swfObj;		}				/**		 * This functio is called when the {@link #swfLoader} has finished loading the asset. It sets positioning of		 * the swf and adds the object to the Stage.		 * @param e Event.COMPLETE		 */				private function displaySwf(e:Event):void {			swfLoader.contentLoaderInfo.removeEventListener(Event.COMPLETE, displaySwf);			swfObj = MovieClip(e.target.content);			swfLoader.unload();			swfObj.x = swfX;			swfObj.y = swfY;			addChild(swfObj);			dispatchEvent(new Event(Event.COMPLETE));		}				/**		 * This function starts playing the {@link #swfObj} from the specified frame		 * @param frame int specifying a frame number 		 */				public function startAnimation(frame:uint):void {			swfObj.gotoAndPlay(frame);			swfObj.addEventListener(Event.ENTER_FRAME, frameHandler);		}				/**		 * This function stops the {@link #swfObj} when the playhead has reached the last frame		 * @param e 		 */				private function frameHandler(e:Event):void {			if (e.target.currentFrame == e.target.totalFrames) {				e.target.stop();				e.target.removeEventListener(Event.ENTER_FRAME, frameHandler);				dispatchEvent(new Event(Event.COMPLETE));			}		}				/**		 * This function stops playing the {@link #swfObj} on the specified frame		 * @param frame int specifying a frame number 		 */			public function stopAnimation(frame:uint = 1):void {			swfObj.gotoAndStop(frame);		}				/**		 * This function stops playing the {@link #swfObj} on the specified frame		 * @param frame int specifying a frame number 		 */			public function showFrame(frame:uint):void {			swfObj.gotoAndStop(frame);		}				/**		 * This function plays the current MovieClip from the specified start label to the specified ending label		 * @param labelStart String representing a frame label in the current MovieClip		 * @param labelEnd String representing a frame label in the current MovieClip		 */				public function playFromLabelToLabel(labelStart:String, labelEnd:String):void {			swfObj.gotoAndPlay(labelStart);			currentLabelEnd = labelEnd;			swfObj.addEventListener(Event.ENTER_FRAME, frameLabelHandler);		}				private function frameLabelHandler(e:Event):void {			if (e.target.currentLabel == currentLabelEnd) {				e.target.stop();				e.target.removeEventListener(Event.ENTER_FRAME, frameLabelHandler);				dispatchEvent(new Event(Event.COMPLETE));			}		}	}}