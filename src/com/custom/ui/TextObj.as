package com.custom.ui {	import flash.display.MovieClip;	import flash.events.*;	import flash.text.*;		public class TextObj extends MovieClip {				private var txtCopy:String;		private var txtColor:uint;		private var txtSize:Number;		private var fieldWidth:Number;		private var fieldHeight:Number;		private var fieldOpacity:Number;		private var fieldBackground:BitmapObj;		private var fieldRotation:Number;				private var _id:String = "";				private var txtField:TextField = new TextField;		private var txtFormat:TextFormat = new TextFormat;				public function TextObj(_copy:String, _color:uint, _fontName:String, _fontSize:Number, _fieldWidth:Number, _fieldHeight:Number,								_fieldOpacity:Number = 1, _fieldBG:String = "", _fieldRotation:Number = 0, _align:String=TextFormatAlign.CENTER,								_leading:Number=0):void {						txtCopy = _copy;			txtColor = _color;			txtSize = _fontSize;			fieldWidth = _fieldWidth;			fieldHeight = _fieldHeight;			fieldOpacity = _fieldOpacity;			fieldRotation = _fieldRotation;						txtFormat.font = _fontName;			txtFormat.bold = false;			txtFormat.color = txtColor;			txtFormat.size = txtSize;			txtFormat.align = _align;			txtFormat.leading = _leading;			txtField.defaultTextFormat = txtFormat;			txtField.antiAliasType = AntiAliasType.ADVANCED;			txtField.selectable = false;			txtField.mouseEnabled = false;			txtField.embedFonts = true;						txtField.multiline = true;			txtField.wordWrap = true;			txtField.autoSize = getAutoSize(_align);			txtField.htmlText = txtCopy;						fieldBackground = new BitmapObj(_fieldBG, "background", 0, 0);			txtField.embedFonts = true;						renderField();		}				/**		 * This function sets some parameters for {@link #txtField} and adds the appropriate objects to the Stage 		 */				private function renderField():void {			txtField.width = fieldWidth;			txtField.alpha = fieldOpacity;			if(fieldHeight>0)txtField.y = (fieldHeight - txtField.textHeight)/2			this.rotation = fieldRotation;   		  			addChild(fieldBackground);			addChild(txtField);		}				public function set copy(newCopy:String):void {			txtCopy = newCopy;			txtField.htmlText = txtCopy;		}				public function get copy():String {			return txtCopy;		}				public function get getTxtField():TextField {			return txtField;		}				public function get id():String {			return this._id;		}				public function set id(value:String):void {			this._id = value;			}				private function getAutoSize(_align:String):String		{			var autoSize:String;			switch (_align) {
				case TextFormatAlign.CENTER:
					autoSize = TextFieldAutoSize.CENTER;
					break;
				case TextFormatAlign.LEFT:
					autoSize = TextFieldAutoSize.LEFT;
					break;
				case TextFormatAlign.RIGHT:
					autoSize = TextFieldAutoSize.RIGHT;
					break;
				default:
					autoSize = TextFieldAutoSize.CENTER;
			}			return autoSize;		}	}}